name: Deploy TypeScript Project

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: windows-latest
    environment: test

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install Dependencies
      run: npm install

    - name: Build TypeScript
      run: npm run build

    - name: Create settings.json File
      run: |
        echo '{ "mongodb": "${{secrets.MONGODB}}", "JWTKey": "${{secrets.JWTKEY}}", "smtpPassword" : "${{secrets.SMTPPASSWORD}}", "smtpUsername" : "${{secrets.SMTPUSERNAME}}", "smtpPort" : ${{secrets.SMTPPORT}}, "smtpHost" : "${{secrets.SMTPHOST}}", "smtpFrom" : "${{secrets.SMTPFROM}}", "smtpSecure" : ${{secrets.SMTPSECURE}} }' > ./build/settings.json

    - name: Install OpenSSH Client (Windows)
      run: Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0

    - name: Setup SSH Key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        $sshDir = "$env:USERPROFILE\.ssh"
        $privateKeyFile = "$sshDir\id_rsa"
        New-Item -ItemType Directory -Force -Path $sshDir
        Set-Content -Path $privateKeyFile -Value "$env:SSH_PRIVATE_KEY"
        & icacls.exe $privateKeyFile /inheritance:r /grant:r "$($env:USERNAME):R"
        Set-Content -Path "$sshDir\config" -Value @"
        Host ${{ secrets.SSH_SERVER }}
          IdentityFile $privateKeyFile
          User ${{ secrets.SSH_USERNAME }}
          StrictHostKeyChecking no
"@

    - name: Ensure Remote Directory Exists
      run: |
        ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} "mkdir -p /home/crash/apps/velocevent/newbuild/"

    - name: Deploy Files to Server via SCP
      run: |
        scp -o ConnectTimeout=60 -r .\build\* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }}:/home/crash/apps/velocevent/newbuild/
